{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "HAVOC // NO NAT, ASG",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Environment VPC"
                    },
                    "Parameters": [
                        "ParameterEnvironment"
                    ]
                }
            ],
            "ParameterLabels": {
                "ParameterEnvironment": {
                    "default": "Environment VPC Name"
                }
            }
        }
    },
    "Parameters": {
        "ParameterEnvironment": {
            "AllowedPattern": "[a-zA-Z0-9]*",
            "ConstraintDescription": "Must parse by `[a-zA-Z0-9]*`",
            "Default": "Sandbox",
            "Description": "Create a unique name to identify this environment by.",
            "MaxLength": "16",
            "MinLength": "3",
            "Type": "String"
        },
        "SSHKeyPair": {
            "Type": "AWS::EC2::KeyPair::KeyName",
            "Description": "Select the name of a pre-created SSH Key used for instance OS access.",
            "ConstraintDescription": "Must be the name of an existing EC2 KeyPair."
        },
        "InstanceType": {
            "Description": "Amazon EC2 instance type for the Havoc ASG",
            "Type": "String",
            "Default": "t2.medium",
            "AllowedValues": [
                "t2.small",
                "t2.medium",
                "t2.large"
            ],
            "ConstraintDescription": "Must be either t2.small, t2.medium or t2.large."
        },
        "AMI": {
            "Type": "AWS::EC2::Image::Id",
            "Description": "AMI for LaunchConfig",
            "Default": "ami-60b6c60a",
            "ConstraintDescription": "Must be a valid AMI for this region"
        },
        "ASGMin": {
            "Description": "Autoscale Group Minimum size",
            "Type": "Number",
            "Default": "1",
            "ConstraintDescription": "Must be a resonable number."
        },
        "ASGMax": {
            "Description": "Autoscale Group Maximum size",
            "Type": "Number",
            "Default": "10",
            "ConstraintDescription": "Must be a resonable number."
        }
    },
    "Conditions": {},
    "Mappings": {
        "NetworkCIDRs": {
            "VPC": {
                "CIDR": "172.21.0.0/22"
            },
            "EXT1": {
                "CIDR": "172.21.0.0/24"
            },
            "EXT2": {
                "CIDR": "172.21.1.0/24"
            },
            "INT1": {
                "CIDR": "172.21.2.0/24"
            },
            "INT2": {
                "CIDR": "172.21.3.0/24"
            }
        }
    },
    "Resources": {
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "ServiceProvider",
                        "Value": "Rackspace"
                    },
                    {
                        "Key": "VPC",
                        "Value": {
                            "Ref": "ParameterEnvironment"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": "InternetGateway"
                    }
                ]
            }
        },
        "Route": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "RouteTableEXT1"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "RouteTableEXT1": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "ServiceProvider",
                        "Value": "Rackspace"
                    },
                    {
                        "Key": "VPC",
                        "Value": {
                            "Ref": "ParameterEnvironment"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": "RouteTableEXT1"
                    }
                ]
            }
        },
        "RouteTableINT1": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "ServiceProvider",
                        "Value": "Rackspace"
                    },
                    {
                        "Key": "VPC",
                        "Value": {
                            "Ref": "ParameterEnvironment"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": "RouteTableINT1"
                    }
                ]
            }
        },
        "RouteTableINT2": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "ServiceProvider",
                        "Value": "Rackspace"
                    },
                    {
                        "Key": "VPC",
                        "Value": {
                            "Ref": "ParameterEnvironment"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": "RouteTableINT2"
                    }
                ]
            }
        },
        "SubnetEXT1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "1",
                        {
                            "Fn::GetAZs": {
                                "Ref": "AWS::Region"
                            }
                        }
                    ]
                },
                "CidrBlock": {
                    "Fn::FindInMap": [
                        "NetworkCIDRs",
                        "EXT1",
                        "CIDR"
                    ]
                },
                "MapPublicIpOnLaunch": "True",
                "Tags": [
                    {
                        "Key": "ServiceProvider",
                        "Value": "Rackspace"
                    },
                    {
                        "Key": "VPC",
                        "Value": {
                            "Ref": "ParameterEnvironment"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": "SubnetEXT1"
                    }
                ]
            }
        },
        "SubnetEXT2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "2",
                        {
                            "Fn::GetAZs": {
                                "Ref": "AWS::Region"
                            }
                        }
                    ]
                },
                "CidrBlock": {
                    "Fn::FindInMap": [
                        "NetworkCIDRs",
                        "EXT2",
                        "CIDR"
                    ]
                },
                "MapPublicIpOnLaunch": "True",
                "Tags": [
                    {
                        "Key": "ServiceProvider",
                        "Value": "Rackspace"
                    },
                    {
                        "Key": "VPC",
                        "Value": {
                            "Ref": "ParameterEnvironment"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": "SubnetEXT2"
                    }
                ]
            }
        },
        "SubnetINT1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "1",
                        {
                            "Fn::GetAZs": {
                                "Ref": "AWS::Region"
                            }
                        }
                    ]
                },
                "CidrBlock": {
                    "Fn::FindInMap": [
                        "NetworkCIDRs",
                        "INT1",
                        "CIDR"
                    ]
                },
                "MapPublicIpOnLaunch": "False",
                "Tags": [
                    {
                        "Key": "ServiceProvider",
                        "Value": "Rackspace"
                    },
                    {
                        "Key": "VPC",
                        "Value": {
                            "Ref": "ParameterEnvironment"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": "SubnetINT1"
                    }
                ]
            }
        },
        "SubnetINT2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "2",
                        {
                            "Fn::GetAZs": {
                                "Ref": "AWS::Region"
                            }
                        }
                    ]
                },
                "CidrBlock": {
                    "Fn::FindInMap": [
                        "NetworkCIDRs",
                        "INT2",
                        "CIDR"
                    ]
                },
                "MapPublicIpOnLaunch": "False",
                "Tags": [
                    {
                        "Key": "ServiceProvider",
                        "Value": "Rackspace"
                    },
                    {
                        "Key": "VPC",
                        "Value": {
                            "Ref": "ParameterEnvironment"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": "SubnetINT2"
                    }
                ]
            }
        },
        "SubnetRouteTableAssociationEXT1": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "SubnetEXT1"
                },
                "RouteTableId": {
                    "Ref": "RouteTableEXT1"
                }
            }
        },
        "SubnetRouteTableAssociationEXT2": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "SubnetEXT2"
                },
                "RouteTableId": {
                    "Ref": "RouteTableEXT1"
                }
            }
        },
        "SubnetRouteTableAssociationINT1": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "SubnetINT1"
                },
                "RouteTableId": {
                    "Ref": "RouteTableINT1"
                }
            }
        },
        "SubnetRouteTableAssociationINT2": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "SubnetINT2"
                },
                "RouteTableId": {
                    "Ref": "RouteTableINT2"
                }
            }
        },
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Fn::FindInMap": [
                        "NetworkCIDRs",
                        "VPC",
                        "CIDR"
                    ]
                },
                "EnableDnsSupport": "True",
                "EnableDnsHostnames": "True",
                "InstanceTenancy": "default",
                "Tags": [
                    {
                        "Key": "ServiceProvider",
                        "Value": "Rackspace"
                    },
                    {
                        "Key": "VPC",
                        "Value": {
                            "Ref": "ParameterEnvironment"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "ParameterEnvironment"
                        }
                    }
                ]
            }
        },
        "VPCGatewayAttachment": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                },
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "LogRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "LogPolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents",
                                        "logs:DescribeLogStreams"
                                    ],
                                    "Resource": [
                                        "arn:aws:logs:*:*:*"
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "InstanceProfileLog": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "LogRole"
                    }
                ]
            }
        },
        "HavocASG": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "Cooldown": "30",
                "HealthCheckGracePeriod": "300",
                "HealthCheckType": "ELB",
                "VPCZoneIdentifier": [
                    {
                        "Ref": "VPCSubnetINT1"
                    },
                    {
                        "Ref": "VPCSubnetINT2"
                    }
                ],
                "LaunchConfigurationName": {
                    "Ref": "HavocLG"
                },
                "LoadBalancerNames": [
                    {
                        "Ref": "HavocELB"
                    }
                ],
                "MinSize": {
                    "Ref": "ASGMin"
                },
                "MaxSize": {
                    "Ref": "ASGMax"
                },
                "Tags": [
                    {
                        "Key": "ServiceProvider",
                        "Value": "Rackspace",
                        "PropagateAtLaunch": "True"
                    },
                    {
                        "Key": "Name",
                        "Value": "HAVOC-ASG",
                        "PropagateAtLaunch": "True"
                    }
                ]
            }
        },
        "HavocSG": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Security Group for HAVOC",
                "VpcId": {
                    "Ref": "VPCId"
                },
                "Tags": [
                    {
                        "Key": "ServiceProvider",
                        "Value": "Rackspace"
                    },
                    {
                        "Key": "Name",
                        "Value": "HAVOC-SG"
                    }
                ],
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "8080",
                        "ToPort": "8080",
                        "SourceSecurityGroupId": {
                            "Ref": "HavocELBSG"
                        }
                    }
                ]
            }
        },
        "HavocELB": {
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
            "Properties": {
                "CrossZone": "True",
                "HealthCheck": {
                    "HealthyThreshold": "10",
                    "Interval": "10",
                    "Target": "TCP:8080",
                    "Timeout": "5",
                    "UnhealthyThreshold": "2"
                },
                "LoadBalancerName": "HAVOC-ELB",
                "Listeners": [
                    {
                        "InstancePort": "8080",
                        "InstanceProtocol": "HTTP",
                        "LoadBalancerPort": "80",
                        "Protocol": "HTTP"
                    }
                ],
                "Scheme": "internet-facing",
                "SecurityGroups": [
                    {
                        "Ref": "HavocSG"
                    }
                ],
                "Subnets": [
                    {
                        "Ref": "VPCSubnetEXT2"
                    },
                    {
                        "Ref": "VPCSubnetEXT1"
                    }
                ],
                "Tags": [
                    {
                        "Key": "ServiceProvider",
                        "Value": "Rackspace"
                    },
                    {
                        "Key": "Name",
                        "Value": "HAVOC-ELB"
                    }
                ]
            }
        },
        "HavocELBSG": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Security Group for HAVOC",
                "VpcId": {
                    "Ref": "VPCId"
                },
                "Tags": [
                    {
                        "Key": "ServiceProvider",
                        "Value": "Rackspace"
                    },
                    {
                        "Key": "Name",
                        "Value": "HAVOC-ELB-SG"
                    }
                ],
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "TCP",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },
        "HavocLG": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Properties": {
                "ImageId": {
                    "Ref": "AMI"
                },
                "InstanceMonitoring": "True",
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "KeyName": {
                    "Ref": "SSHKeyPair"
                },
                "SecurityGroups": [
                    {
                        "Ref": "HavocSG"
                    }
                ],
                "IamInstanceProfile": {
                    "Ref": "InstanceProfileLog"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -x\n",
                                "curl -s https://raw.githubusercontent.com/rax-brazil/pub-ssh-keys/master/rackerkeys.sh | bash",
                                "wget https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py\n",
                                "chmod +x ./awslogs-agent-setup.py\n",
                                "./awslogs-agent-setup.py -n -r us-east-1 -c /root/awslogs.cfg\n"
                            ]
                        ]
                    }
                }
            }
        }
    },
    "Outputs": {
        "VPCId": {
            "Value": {
                "Ref": "VPC"
            }
        },
        "VPCCIDR": {
            "Value": {
                "Fn::GetAtt": [
                    "VPC",
                    "CidrBlock"
                ]
            }
        },
        "SubnetINT1": {
            "Value": {
                "Ref": "SubnetINT1"
            }
        },
        "SubnetINT2": {
            "Value": {
                "Ref": "SubnetINT2"
            }
        },
        "SubnetEXT1": {
            "Value": {
                "Ref": "SubnetEXT1"
            }
        },
        "SubnetEXT2": {
            "Value": {
                "Ref": "SubnetEXT2"
            }
        }
    }
}
